{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { config } from '../config/Config';\nimport { handleResponse } from '../helpers';\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\nexport const authenticationService = {\n  login,\n  logout,\n  currentUser: currentUserSubject.asObservable(),\n\n  get currentUserValue() {\n    return currentUserSubject.value;\n  }\n\n};\n\nfunction login(username, password) {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  };\n  return fetch(`${config.apiUrl}/users/authenticate`, requestOptions).then(handleResponse).then(user => {\n    // store user details and jwt token in local storage to keep user logged in between page refreshes\n    localStorage.setItem('currentUser', JSON.stringify(user));\n    currentUserSubject.next(user);\n    return user;\n  });\n}\n\nfunction logout() {\n  // remove user from local storage to log user out\n  localStorage.removeItem('currentUser');\n  currentUserSubject.next(null);\n}","map":{"version":3,"sources":["C:/Users/danie/WebstormProjects/Usterka/src/auth/services/authentication.service.js"],"names":["BehaviorSubject","config","handleResponse","currentUserSubject","JSON","parse","localStorage","getItem","authenticationService","login","logout","currentUser","asObservable","currentUserValue","value","username","password","requestOptions","method","headers","body","stringify","fetch","apiUrl","then","user","setItem","next","removeItem"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,MAA9B;AAEA,SAAQC,MAAR,QAAqB,kBAArB;AACA,SAAQC,cAAR,QAA6B,YAA7B;AAEA,MAAMC,kBAAkB,GAAG,IAAIH,eAAJ,CAAoBI,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAApB,CAA3B;AAEA,OAAO,MAAMC,qBAAqB,GAAG;AACjCC,EAAAA,KADiC;AAEjCC,EAAAA,MAFiC;AAGjCC,EAAAA,WAAW,EAAER,kBAAkB,CAACS,YAAnB,EAHoB;;AAIjC,MAAIC,gBAAJ,GAAuB;AACnB,WAAOV,kBAAkB,CAACW,KAA1B;AACH;;AANgC,CAA9B;;AASP,SAASL,KAAT,CAAeM,QAAf,EAAyBC,QAAzB,EAAmC;AAC/B,QAAMC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB,KAFU;AAGnBC,IAAAA,IAAI,EAAEhB,IAAI,CAACiB,SAAL,CAAe;AAACN,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAf;AAHa,GAAvB;AAMA,SAAOM,KAAK,CAAE,GAAErB,MAAM,CAACsB,MAAO,qBAAlB,EAAwCN,cAAxC,CAAL,CACFO,IADE,CACGtB,cADH,EAEFsB,IAFE,CAEGC,IAAI,IAAI;AACV;AACAnB,IAAAA,YAAY,CAACoB,OAAb,CAAqB,aAArB,EAAoCtB,IAAI,CAACiB,SAAL,CAAeI,IAAf,CAApC;AACAtB,IAAAA,kBAAkB,CAACwB,IAAnB,CAAwBF,IAAxB;AAEA,WAAOA,IAAP;AACH,GARE,CAAP;AASH;;AAED,SAASf,MAAT,GAAkB;AACd;AACAJ,EAAAA,YAAY,CAACsB,UAAb,CAAwB,aAAxB;AACAzB,EAAAA,kBAAkB,CAACwB,IAAnB,CAAwB,IAAxB;AACH","sourcesContent":["import {BehaviorSubject} from 'rxjs';\r\n\r\nimport {config} from '../config/Config';\r\nimport {handleResponse} from '../helpers';\r\n\r\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\r\n\r\nexport const authenticationService = {\r\n    login,\r\n    logout,\r\n    currentUser: currentUserSubject.asObservable(),\r\n    get currentUserValue() {\r\n        return currentUserSubject.value\r\n    }\r\n};\r\n\r\nfunction login(username, password) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({username, password})\r\n    };\r\n\r\n    return fetch(`${config.apiUrl}/users/authenticate`, requestOptions)\r\n        .then(handleResponse)\r\n        .then(user => {\r\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n            localStorage.setItem('currentUser', JSON.stringify(user));\r\n            currentUserSubject.next(user);\r\n\r\n            return user;\r\n        });\r\n}\r\n\r\nfunction logout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('currentUser');\r\n    currentUserSubject.next(null);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}