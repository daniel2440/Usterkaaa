{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\danie\\\\WebstormProjects\\\\Usterka\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\danie\\\\WebstormProjects\\\\Usterka\\\\src\\\\components\\\\main\\\\MainPage.js\";\nimport React, { useState } from \"react\";\nimport FullCalendar from '@fullcalendar/react';\nimport { getEventsWithColorsMapped, mockedEvents } from \"../utils/mockedEvents\";\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport { LegendBar } from \"./LegendBar\";\nimport { EventModal } from \"../popups/EventModal\";\nimport \"./MainPage.css\";\nexport const MainPage = () => {\n  const _useState = useState(mockedEvents),\n        _useState2 = _slicedToArray(_useState, 2),\n        events = _useState2[0],\n        setEvents = _useState2[1];\n\n  const calendarRef = React.createRef();\n\n  function handleClick(info) {\n    setId(info.event.id);\n    setShow(true);\n  }\n\n  const _useState3 = useState(getEventsWithColorsMapped(events)),\n        _useState4 = _slicedToArray(_useState3, 2),\n        stateEvents = _useState4[0],\n        setStateEvents = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        show = _useState6[0],\n        setShow = _useState6[1];\n\n  const _useState7 = useState('1'),\n        _useState8 = _slicedToArray(_useState7, 2),\n        id = _useState8[0],\n        setId = _useState8[1];\n\n  return React.createElement(\"div\", {\n    className: \"mainPage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(EventModal, {\n    show: show,\n    handleClose: () => setShow(false),\n    id: id,\n    setStateEvents: setStateEvents,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(LegendBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"calendar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(FullCalendar, {\n    ref: calendarRef,\n    defaultView: \"timeGridWeek\",\n    plugins: [timeGridPlugin],\n    allDaySlot: false,\n    events: stateEvents,\n    eventClick: handleClick,\n    height: 720,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["C:/Users/danie/WebstormProjects/Usterka/src/components/main/MainPage.js"],"names":["React","useState","FullCalendar","getEventsWithColorsMapped","mockedEvents","timeGridPlugin","LegendBar","EventModal","MainPage","events","setEvents","calendarRef","createRef","handleClick","info","setId","event","id","setShow","stateEvents","setStateEvents","show"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAAQC,yBAAR,EAAmCC,YAAnC,QAAsD,uBAAtD;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,UAAR,QAAyB,sBAAzB;AAEA,OAAO,gBAAP;AAGA,OAAO,MAAMC,QAAQ,GAAI,MAAM;AAAA,oBACCP,QAAQ,CAACG,YAAD,CADT;AAAA;AAAA,QACpBK,MADoB;AAAA,QACZC,SADY;;AAG3B,QAAMC,WAAW,GAAGX,KAAK,CAACY,SAAN,EAApB;;AAEA,WAASC,WAAT,CAAqBC,IAArB,EAA2B;AACvBC,IAAAA,KAAK,CAACD,IAAI,CAACE,KAAL,CAAWC,EAAZ,CAAL;AACAC,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH;;AAR0B,qBAUYjB,QAAQ,CAACE,yBAAyB,CAACM,MAAD,CAA1B,CAVpB;AAAA;AAAA,QAUpBU,WAVoB;AAAA,QAUNC,cAVM;;AAAA,qBAYHnB,QAAQ,CAAC,KAAD,CAZL;AAAA;AAAA,QAYpBoB,IAZoB;AAAA,QAYdH,OAZc;;AAAA,qBAaPjB,QAAQ,CAAC,GAAD,CAbD;AAAA;AAAA,QAapBgB,EAboB;AAAA,QAahBF,KAbgB;;AAe3B,SACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEM,IAAlB;AAAwB,IAAA,WAAW,EAAE,MAAMH,OAAO,CAAC,KAAD,CAAlD;AAA2D,IAAA,EAAE,EAAED,EAA/D;AAAmE,IAAA,cAAc,EAAEG,cAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AACI,IAAA,GAAG,EAAET,WADT;AAEI,IAAA,WAAW,EAAC,cAFhB;AAGI,IAAA,OAAO,EAAE,CAACN,cAAD,CAHb;AAII,IAAA,UAAU,EAAE,KAJhB;AAKI,IAAA,MAAM,EAAEc,WALZ;AAMI,IAAA,UAAU,EAAEN,WANhB;AAOI,IAAA,MAAM,EAAE,GAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CADJ;AAkBH,CAjCM","sourcesContent":["import React, {useState} from \"react\";\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport {getEventsWithColorsMapped, mockedEvents} from \"../utils/mockedEvents\";\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport {LegendBar} from \"./LegendBar\";\r\nimport {EventModal} from \"../popups/EventModal\";\r\n\r\nimport \"./MainPage.css\";\r\n\r\n\r\nexport const MainPage =  () => {\r\n    const [events, setEvents] = useState(mockedEvents);\r\n\r\n    const calendarRef = React.createRef();\r\n\r\n    function handleClick(info) {\r\n        setId(info.event.id);\r\n        setShow(true);\r\n    }\r\n\r\n    const [stateEvents , setStateEvents] = useState(getEventsWithColorsMapped(events));\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [id, setId] = useState('1');\r\n\r\n    return (\r\n        <div className=\"mainPage\">\r\n            <EventModal show={show} handleClose={() => setShow(false)} id={id} setStateEvents={setStateEvents}/>\r\n\r\n            <LegendBar/>\r\n            <div className=\"calendar\">\r\n                <FullCalendar\r\n                    ref={calendarRef}\r\n                    defaultView=\"timeGridWeek\"\r\n                    plugins={[timeGridPlugin]}\r\n                    allDaySlot={false}\r\n                    events={stateEvents}\r\n                    eventClick={handleClick}\r\n                    height={720}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}