{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\danie\\\\WebstormProjects\\\\Usterka\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\danie\\\\WebstormProjects\\\\Usterka\\\\src\\\\components\\\\popups\\\\ReservationModal.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Alert, Modal } from \"react-bootstrap\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { Prompt } from \"./Prompt\";\nconst businessHours = {\n  daysOfWeek: [1, 2, 3, 4, 5, 6],\n  startTime: '7:00',\n  endTime: '21:00'\n};\nexport const ReservationModal = props => {\n  const calendarRef = React.createRef();\n\n  const _useState = useState(undefined),\n        _useState2 = _slicedToArray(_useState, 2),\n        reservation = _useState2[0],\n        setReservation = _useState2[1];\n\n  const _useState3 = useState({\n    occured: false,\n    message: ''\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        error = _useState4[0],\n        setError = _useState4[1];\n\n  const collides = info => {\n    return props.events.events.find(event => {\n      const eventStart = new Date(event.start);\n      const eventEnd = new Date(event.end);\n      return info.start >= eventStart && info.start <= eventEnd || info.end >= eventStart && info.end <= eventEnd || info.start <= eventStart && info.end >= eventEnd;\n    });\n  };\n\n  const handleSelect = info => {\n    if (collides(info)) {\n      setError({\n        occured: true,\n        message: 'Wybierz inny termin'\n      });\n    } else {\n      setError({\n        occured: false,\n        message: ''\n      });\n      setReservation({\n        start: info.start,\n        end: info.end\n      });\n    }\n  };\n\n  const handleClose = param => {\n    setReservation(undefined);\n\n    if (param) {\n      props.setShowToast();\n    }\n\n    setError({\n      occured: false,\n      message: ''\n    });\n    props.handleClose();\n  }; // prevent bug with events not showing\n\n\n  useEffect(() => {\n    if (calendarRef.current) {\n      calendarRef.current.calendar.prev();\n      calendarRef.current.calendar.next();\n    }\n  }, [props.show]);\n  return React.createElement(Modal, {\n    size: \"lg\",\n    show: props.show,\n    onHide: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Kalendarz wykonawcy\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, error.occured !== false && React.createElement(Alert, {\n    variant: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, error.message), reservation !== undefined && React.createElement(Prompt, {\n    handleClose: handleClose,\n    reservation: reservation,\n    setError: setError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(FullCalendar, {\n    ref: calendarRef,\n    defaultView: \"timeGridWeek\",\n    allDaySlot: false,\n    selectable: true,\n    unselectAuto: false,\n    plugins: [timeGridPlugin, interactionPlugin],\n    events: props.events,\n    select: handleSelect,\n    height: 500,\n    businessHours: businessHours,\n    dragScroll: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["C:/Users/danie/WebstormProjects/Usterka/src/components/popups/ReservationModal.js"],"names":["React","useEffect","useState","Alert","Modal","timeGridPlugin","FullCalendar","interactionPlugin","Prompt","businessHours","daysOfWeek","startTime","endTime","ReservationModal","props","calendarRef","createRef","undefined","reservation","setReservation","occured","message","error","setError","collides","info","events","find","event","eventStart","Date","start","eventEnd","end","handleSelect","handleClose","param","setShowToast","current","calendar","prev","next","show"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {Alert, Modal} from \"react-bootstrap\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport {Prompt} from \"./Prompt\";\r\n\r\nconst businessHours = {\r\n    daysOfWeek: [1, 2, 3, 4, 5, 6],\r\n    startTime: '7:00',\r\n    endTime: '21:00',\r\n};\r\n\r\n\r\nexport const ReservationModal = (props) => {\r\n    const calendarRef = React.createRef();\r\n    const [reservation, setReservation] = useState(undefined);\r\n    const [error, setError] = useState({occured: false, message: ''});\r\n\r\n    const collides = (info) => {\r\n        return props.events.events.find(event => {\r\n            const eventStart = new Date(event.start);\r\n            const eventEnd = new Date(event.end);\r\n            return (info.start >= eventStart && info.start <= eventEnd) ||\r\n                (info.end >= eventStart && info.end <= eventEnd) ||\r\n                (info.start <= eventStart && info.end >= eventEnd);\r\n        })\r\n    };\r\n\r\n    const handleSelect = (info) => {\r\n        if (collides(info)) {\r\n            setError({occured: true, message: 'Wybierz inny termin'});\r\n        } else {\r\n            setError({occured: false, message: ''});\r\n            setReservation({start: info.start, end: info.end});\r\n        }\r\n    };\r\n\r\n\r\n    const handleClose = (param) => {\r\n        setReservation(undefined);\r\n        if (param) {\r\n            props.setShowToast();\r\n        }\r\n        setError({occured: false, message: ''});\r\n        props.handleClose();\r\n    };\r\n\r\n    // prevent bug with events not showing\r\n    useEffect(() => {\r\n        if (calendarRef.current) {\r\n            calendarRef.current.calendar.prev();\r\n            calendarRef.current.calendar.next();\r\n        }\r\n    }, [props.show]);\r\n\r\n    return (\r\n        <Modal size='lg' show={props.show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Kalendarz wykonawcy</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {error.occured !== false && <Alert variant=\"danger\">{error.message}</Alert>}\r\n\r\n                {reservation !== undefined && (\r\n                    <Prompt handleClose={handleClose} reservation={reservation} setError={setError}/>)}\r\n\r\n                <FullCalendar\r\n                    ref={calendarRef}\r\n                    defaultView=\"timeGridWeek\"\r\n                    allDaySlot={false}\r\n                    selectable={true}\r\n                    unselectAuto={false}\r\n                    plugins={[timeGridPlugin, interactionPlugin]}\r\n                    events={props.events}\r\n                    select={handleSelect}\r\n                    height={500}\r\n                    businessHours={businessHours}\r\n                    dragScroll={false}\r\n                />\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}