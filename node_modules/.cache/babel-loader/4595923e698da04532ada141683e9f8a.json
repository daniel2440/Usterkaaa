{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\danie\\\\WebstormProjects\\\\Usterka\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\danie\\\\WebstormProjects\\\\Usterka\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\danie\\\\WebstormProjects\\\\Usterka\\\\src\\\\components\\\\popups\\\\Prompt.js\";\nimport React, { useState } from \"react\";\nimport { Button, FormControl, InputGroup } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nconst ButtonMenu = styled.div`\n{\n    display: flex;\n    justify-content: space-around;\n    padding: 16px;\n}`;\nexport const Prompt = props => {\n  const _useState = useState({\n    title: '',\n    shortText: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        form = _useState2[0],\n        setForm = _useState2[1];\n\n  const validateForm = () => {\n    if (form.title === '') {\n      props.setError({\n        occured: true,\n        message: 'Dodaj tytul ogloszenia'\n      });\n    } else if (form.shortText === '') {\n      props.setError({\n        occured: true,\n        message: 'Dodaj opis ogloszenia'\n      });\n    } else {\n      props.setError({\n        occured: false,\n        message: 'ok'\n      });\n      props.handleClose(true);\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Wybrane terminy: \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), \" \", props.reservation.start.toLocaleString(), \" - \", props.reservation.end.toLocaleString())), React.createElement(InputGroup, {\n    className: \"mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(InputGroup.Prepend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(InputGroup.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Tytul ogloszenia\")), React.createElement(FormControl, {\n    \"aria-describedby\": \"basic-addon3\",\n    onChange: text => setForm(prevState => {\n      return _objectSpread({}, prevState, {\n        title: text\n      });\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(InputGroup.Prepend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(InputGroup.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Krotki opis\")), React.createElement(FormControl, {\n    as: \"textarea\",\n    \"aria-label\": \"With textarea\",\n    onChange: text => setForm(prevState => {\n      return _objectSpread({}, prevState, {\n        shortText: text\n      });\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(ButtonMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: props.handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Anuluj\"), React.createElement(Button, {\n    variant: \"primary\",\n    onClick: validateForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Zarezerwuj\")));\n};","map":{"version":3,"sources":["C:/Users/danie/WebstormProjects/Usterka/src/components/popups/Prompt.js"],"names":["React","useState","Button","FormControl","InputGroup","styled","ButtonMenu","div","Prompt","props","title","shortText","form","setForm","validateForm","setError","occured","message","handleClose","reservation","start","toLocaleString","end","text","prevState"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Button, FormControl, InputGroup} from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ButtonMenu = styled.div`\r\n{\r\n    display: flex;\r\n    justify-content: space-around;\r\n    padding: 16px;\r\n}`;\r\n\r\nexport const Prompt = (props) => {\r\n    const [form, setForm] = useState({\r\n        title: '',\r\n        shortText: '',\r\n    });\r\n\r\n    const validateForm = () => {\r\n        if (form.title === '') {\r\n            props.setError({occured: true, message: 'Dodaj tytul ogloszenia'})\r\n        } else if (form.shortText === '') {\r\n            props.setError({occured: true, message: 'Dodaj opis ogloszenia'})\r\n        } else {\r\n            props.setError({occured: false, message: 'ok'});\r\n            props.handleClose(true);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <h4>Wybrane\r\n                    terminy: <br/> {props.reservation.start.toLocaleString()} - {props.reservation.end.toLocaleString()}\r\n                </h4>\r\n            </div>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text>\r\n                        Tytul ogloszenia\r\n                    </InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl aria-describedby=\"basic-addon3\" onChange={text => setForm(prevState => {\r\n                    return {...prevState, title: text};\r\n                })}/>\r\n            </InputGroup>\r\n            <InputGroup>\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text>Krotki opis</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl as=\"textarea\" aria-label=\"With textarea\" onChange={text => setForm(prevState => {\r\n                    return {...prevState, shortText: text};\r\n                })}/>\r\n            </InputGroup>\r\n\r\n            <ButtonMenu>\r\n                <Button variant=\"secondary\" onClick={props.handleClose}>\r\n                    Anuluj\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={validateForm}>\r\n                    Zarezerwuj\r\n                </Button>\r\n            </ButtonMenu>\r\n        </>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}